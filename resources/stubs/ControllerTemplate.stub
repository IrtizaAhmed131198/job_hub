<?php

namespace App\Http\Controllers\Admin;

use App\Models\{{ModelName}};
use Illuminate\Http\Request;
use Illuminate\Support\Facades\File;
use Illuminate\Support\Facades\Validator;
use Yajra\DataTables\DataTables;

class {{ModelName}}Controller extends Controller
{
    public function get{{ModelName}}(Request $request)
    {
        if ($request->ajax()) {
            $data = {{ModelName}}::all();

            return DataTables::of($data)
                ->addColumn('id', function ($row) {
                    // Add row counter
                    static $counter = 0;
                    $counter++;
                    return $counter;
                })
                {{indexImage}}
                ->addColumn('action', function ($row) {
                    // Add any custom action buttons here
                    $editButton = '<a href="' . route('{{modelSnakeCase}}.edit', ['id' => $row->id]) . '" class="btn btn-info btn-custom mr-2">Edit</a>';
                    $deleteButton = '<button class="btn btn-danger delete-user" data-id="' . $row->id . '" data-model="{{modelSnakeCase}}" data-toggle="modal" data-target="#deleteUserModal">Delete</button>';

                    return '<div class="d-flex">'.$editButton . ' ' . $deleteButton.'</div>';
                })
                ->rawColumns(['id', '{{indexImageName}}', 'action'])
                ->make(true);
        }

        return view('admin.{{modelSnakeCase}}.index');
    }

    public function index()
    {
        $data = {{ModelName}}::all();
        return view('admin.{{modelSnakeCase}}.index', compact('data'));
    }

    public function create()
    {
        return view('admin.{{modelSnakeCase}}.create');
    }

    public function store(Request $request)
    {
        $validator = Validator::make($request->all(), [
{{validationRules}}
        ]);

        if ($validator->fails()) {
            return redirect()->back()->withErrors($validator)->withInput();
        }

        $data = $request->except(['_token']);

{{fileUploadLogicForStore}}

        {{ModelName}}::create($data);

        return redirect()->route('{{modelSnakeCase}}.index')->with('success', '{{ModelName}} created successfully.');
    }

    public function edit($id)
    {
        $data = {{ModelName}}::findOrFail($id);
        return view('{{modelSnakeCase}}.edit', compact('data'));
    }

    public function update(Request $request, $id)
    {
        $validator = Validator::make($request->all(), [
{{validationRules}}
        ]);

        if ($validator->fails()) {
            return redirect()->back()->withErrors($validator)->withInput();
        }

        $data = {{ModelName}}::findOrFail($id);

{{fileUploadLogicForUpdate}}

        $data->update($request->all());

        return redirect()->route('{{modelSnakeCase}}.index')->with('success', '{{ModelName}} updated successfully.');
    }

    public function destroy($id)
    {
        $data = {{ModelName}}::findOrFail($id);

{{fileDeletionLogic}}

        $data->delete();

        return redirect()->route('{{modelSnakeCase}}.index')->with('success', '{{ModelName}} deleted successfully.');
    }
}
